//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5485 版自动生成。
// 
#pragma warning disable 1591

namespace DataExport.UploadMrInfoService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class EmrService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestExceptionLogerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMRInfoByEleMentNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPacsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHISMESSOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestHISCONFIRMICDOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback C_TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrAccountValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroLabReportItemDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOnePatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatMZOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderItemDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrOperAnaMsgHandlerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDeptPatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatMedicalCostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroLisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroAdtLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrReportBedDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisQMSYRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetPatDischargeDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetEncodingPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback YunNanTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneralDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestPacsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrToHisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchroZDCHARGEITEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback testnewpatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrUserPicValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback HISUserNamePicOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDeptDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroICDCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroBedDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOperationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOutPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatBasicInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatTotalPayMentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderTypeDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetGeneralSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetPsblMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetPsblReportOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrService() {
            this.Url = global::DataExport.Properties.Settings.Default.DataExport_UploadMrInfoService_EmrService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestExceptionLogerCompletedEventHandler TestExceptionLogerCompleted;
        
        /// <remarks/>
        public event GetMRInfoByEleMentNameCompletedEventHandler GetMRInfoByEleMentNameCompleted;
        
        /// <remarks/>
        public event CallInterfaceCompletedEventHandler CallInterfaceCompleted;
        
        /// <remarks/>
        public event EmrGetLabDataSetByPatentIDCompletedEventHandler EmrGetLabDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event GetPacsDataCompletedEventHandler GetPacsDataCompleted;
        
        /// <remarks/>
        public event GetHISMESSCompletedEventHandler GetHISMESSCompleted;
        
        /// <remarks/>
        public event TestHISCONFIRMICDCompletedEventHandler TestHISCONFIRMICDCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event C_TestCompletedEventHandler C_TestCompleted;
        
        /// <remarks/>
        public event EmrAccountValidateCompletedEventHandler EmrAccountValidateCompleted;
        
        /// <remarks/>
        public event EmrSynchroLabReportItemDictCompletedEventHandler EmrSynchroLabReportItemDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroOnePatCompletedEventHandler EmrSynchroOnePatCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatMZCompletedEventHandler EmrSynchroNewPatMZCompleted;
        
        /// <remarks/>
        public event EmrGetOrderItemDictCompletedEventHandler EmrGetOrderItemDictCompleted;
        
        /// <remarks/>
        public event EmrOperAnaMsgHandlerCompletedEventHandler EmrOperAnaMsgHandlerCompleted;
        
        /// <remarks/>
        public event EmrSynchroDeptPatOrderCompletedEventHandler EmrSynchroDeptPatOrderCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatMedicalCostByIdCompletedEventHandler EmrSynchroPatMedicalCostByIdCompleted;
        
        /// <remarks/>
        public event EmrSynchroLisCompletedEventHandler EmrSynchroLisCompleted;
        
        /// <remarks/>
        public event EmrSynchroAdtLogCompletedEventHandler EmrSynchroAdtLogCompleted;
        
        /// <remarks/>
        public event UpdateEmrReportBedDateCompletedEventHandler UpdateEmrReportBedDateCompleted;
        
        /// <remarks/>
        public event EmrGetHisQMSYRSCompletedEventHandler EmrGetHisQMSYRSCompleted;
        
        /// <remarks/>
        public event EmrGetPatDischargeDateTimeCompletedEventHandler EmrGetPatDischargeDateTimeCompleted;
        
        /// <remarks/>
        public event EmrGetEncodingPasswordCompletedEventHandler EmrGetEncodingPasswordCompleted;
        
        /// <remarks/>
        public event YunNanTestCompletedEventHandler YunNanTestCompleted;
        
        /// <remarks/>
        public event GeneralDataSetCompletedEventHandler GeneralDataSetCompleted;
        
        /// <remarks/>
        public event TestPacsCompletedEventHandler TestPacsCompleted;
        
        /// <remarks/>
        public event EmrGenralDataSetCompletedEventHandler EmrGenralDataSetCompleted;
        
        /// <remarks/>
        public event EmrToHisCompletedEventHandler EmrToHisCompleted;
        
        /// <remarks/>
        public event EmrGenralStrCompletedEventHandler EmrGenralStrCompleted;
        
        /// <remarks/>
        public event SynchroZDCHARGEITEMCompletedEventHandler SynchroZDCHARGEITEMCompleted;
        
        /// <remarks/>
        public event testnewpatientCompletedEventHandler testnewpatientCompleted;
        
        /// <remarks/>
        public event EmrUserPicValidateCompletedEventHandler EmrUserPicValidateCompleted;
        
        /// <remarks/>
        public event HISUserNamePicCompletedEventHandler HISUserNamePicCompleted;
        
        /// <remarks/>
        public event EmrSynchroDictCompletedEventHandler EmrSynchroDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroDeptDictCompletedEventHandler EmrSynchroDeptDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroICDCodeCompletedEventHandler EmrSynchroICDCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroBedDictCompletedEventHandler EmrSynchroBedDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroOperationCodeCompletedEventHandler EmrSynchroOperationCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroUsersCompletedEventHandler EmrSynchroUsersCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetCompletedEventHandler EmrGetOrderDataSetCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatCompletedEventHandler EmrSynchroNewPatCompleted;
        
        /// <remarks/>
        public event EmrSynchroOutPatCompletedEventHandler EmrSynchroOutPatCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatBasicInfoCompletedEventHandler EmrSynchroPatBasicInfoCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatTotalPayMentsCompletedEventHandler EmrSynchroPatTotalPayMentsCompleted;
        
        /// <remarks/>
        public event EmrGetOrderTypeDictCompletedEventHandler EmrGetOrderTypeDictCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetByPatentIDCompletedEventHandler EmrGetOrderDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatOrderCompletedEventHandler EmrSynchroPatOrderCompleted;
        
        /// <remarks/>
        public event EmrGetGeneralSQLCompletedEventHandler EmrGetGeneralSQLCompleted;
        
        /// <remarks/>
        public event EmrGetPsblMasterCompletedEventHandler EmrGetPsblMasterCompleted;
        
        /// <remarks/>
        public event EmrGetPsblReportCompletedEventHandler EmrGetPsblReportCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestExceptionLoger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestExceptionLoger(string strExceptionDBType, string strSql, string strNote) {
            object[] results = this.Invoke("TestExceptionLoger", new object[] {
                        strExceptionDBType,
                        strSql,
                        strNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestExceptionLogerAsync(string strExceptionDBType, string strSql, string strNote) {
            this.TestExceptionLogerAsync(strExceptionDBType, strSql, strNote, null);
        }
        
        /// <remarks/>
        public void TestExceptionLogerAsync(string strExceptionDBType, string strSql, string strNote, object userState) {
            if ((this.TestExceptionLogerOperationCompleted == null)) {
                this.TestExceptionLogerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestExceptionLogerOperationCompleted);
            }
            this.InvokeAsync("TestExceptionLoger", new object[] {
                        strExceptionDBType,
                        strSql,
                        strNote}, this.TestExceptionLogerOperationCompleted, userState);
        }
        
        private void OnTestExceptionLogerOperationCompleted(object arg) {
            if ((this.TestExceptionLogerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestExceptionLogerCompleted(this, new TestExceptionLogerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMRInfoByEleMentName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMRInfoByEleMentName(string strPatientId, int nVisitID, string p_strElemName) {
            object[] results = this.Invoke("GetMRInfoByEleMentName", new object[] {
                        strPatientId,
                        nVisitID,
                        p_strElemName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMRInfoByEleMentNameAsync(string strPatientId, int nVisitID, string p_strElemName) {
            this.GetMRInfoByEleMentNameAsync(strPatientId, nVisitID, p_strElemName, null);
        }
        
        /// <remarks/>
        public void GetMRInfoByEleMentNameAsync(string strPatientId, int nVisitID, string p_strElemName, object userState) {
            if ((this.GetMRInfoByEleMentNameOperationCompleted == null)) {
                this.GetMRInfoByEleMentNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMRInfoByEleMentNameOperationCompleted);
            }
            this.InvokeAsync("GetMRInfoByEleMentName", new object[] {
                        strPatientId,
                        nVisitID,
                        p_strElemName}, this.GetMRInfoByEleMentNameOperationCompleted, userState);
        }
        
        private void OnGetMRInfoByEleMentNameOperationCompleted(object arg) {
            if ((this.GetMRInfoByEleMentNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMRInfoByEleMentNameCompleted(this, new GetMRInfoByEleMentNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallInterface", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallInterface(string msgHeader, string msgBody) {
            object[] results = this.Invoke("CallInterface", new object[] {
                        msgHeader,
                        msgBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallInterfaceAsync(string msgHeader, string msgBody) {
            this.CallInterfaceAsync(msgHeader, msgBody, null);
        }
        
        /// <remarks/>
        public void CallInterfaceAsync(string msgHeader, string msgBody, object userState) {
            if ((this.CallInterfaceOperationCompleted == null)) {
                this.CallInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallInterfaceOperationCompleted);
            }
            this.InvokeAsync("CallInterface", new object[] {
                        msgHeader,
                        msgBody}, this.CallInterfaceOperationCompleted, userState);
        }
        
        private void OnCallInterfaceOperationCompleted(object arg) {
            if ((this.CallInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallInterfaceCompleted(this, new CallInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetLabDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetLabDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetLabDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetLabDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetLabDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetLabDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabDataSetByPatentIDCompleted(this, new EmrGetLabDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPacsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPacsData(string p_strInpNo) {
            object[] results = this.Invoke("GetPacsData", new object[] {
                        p_strInpNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPacsDataAsync(string p_strInpNo) {
            this.GetPacsDataAsync(p_strInpNo, null);
        }
        
        /// <remarks/>
        public void GetPacsDataAsync(string p_strInpNo, object userState) {
            if ((this.GetPacsDataOperationCompleted == null)) {
                this.GetPacsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPacsDataOperationCompleted);
            }
            this.InvokeAsync("GetPacsData", new object[] {
                        p_strInpNo}, this.GetPacsDataOperationCompleted, userState);
        }
        
        private void OnGetPacsDataOperationCompleted(object arg) {
            if ((this.GetPacsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPacsDataCompleted(this, new GetPacsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHISMESS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHISMESS(string _patient_id, string _visit_id) {
            object[] results = this.Invoke("GetHISMESS", new object[] {
                        _patient_id,
                        _visit_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHISMESSAsync(string _patient_id, string _visit_id) {
            this.GetHISMESSAsync(_patient_id, _visit_id, null);
        }
        
        /// <remarks/>
        public void GetHISMESSAsync(string _patient_id, string _visit_id, object userState) {
            if ((this.GetHISMESSOperationCompleted == null)) {
                this.GetHISMESSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHISMESSOperationCompleted);
            }
            this.InvokeAsync("GetHISMESS", new object[] {
                        _patient_id,
                        _visit_id}, this.GetHISMESSOperationCompleted, userState);
        }
        
        private void OnGetHISMESSOperationCompleted(object arg) {
            if ((this.GetHISMESSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHISMESSCompleted(this, new GetHISMESSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestHISCONFIRMICD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestHISCONFIRMICD(string inp_no, string icd) {
            this.Invoke("TestHISCONFIRMICD", new object[] {
                        inp_no,
                        icd});
        }
        
        /// <remarks/>
        public void TestHISCONFIRMICDAsync(string inp_no, string icd) {
            this.TestHISCONFIRMICDAsync(inp_no, icd, null);
        }
        
        /// <remarks/>
        public void TestHISCONFIRMICDAsync(string inp_no, string icd, object userState) {
            if ((this.TestHISCONFIRMICDOperationCompleted == null)) {
                this.TestHISCONFIRMICDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestHISCONFIRMICDOperationCompleted);
            }
            this.InvokeAsync("TestHISCONFIRMICD", new object[] {
                        inp_no,
                        icd}, this.TestHISCONFIRMICDOperationCompleted, userState);
        }
        
        private void OnTestHISCONFIRMICDOperationCompleted(object arg) {
            if ((this.TestHISCONFIRMICDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestHISCONFIRMICDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld(string str) {
            object[] results = this.Invoke("HelloWorld", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string str) {
            this.HelloWorldAsync(str, null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string str, object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[] {
                        str}, this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/C_Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet C_Test(string strPatID, string strVisitID) {
            object[] results = this.Invoke("C_Test", new object[] {
                        strPatID,
                        strVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void C_TestAsync(string strPatID, string strVisitID) {
            this.C_TestAsync(strPatID, strVisitID, null);
        }
        
        /// <remarks/>
        public void C_TestAsync(string strPatID, string strVisitID, object userState) {
            if ((this.C_TestOperationCompleted == null)) {
                this.C_TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnC_TestOperationCompleted);
            }
            this.InvokeAsync("C_Test", new object[] {
                        strPatID,
                        strVisitID}, this.C_TestOperationCompleted, userState);
        }
        
        private void OnC_TestOperationCompleted(object arg) {
            if ((this.C_TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.C_TestCompleted(this, new C_TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrAccountValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrAccountValidate(string strUserID, string strUSERPWD, string strWKStation) {
            object[] results = this.Invoke("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation) {
            this.EmrAccountValidateAsync(strUserID, strUSERPWD, strWKStation, null);
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation, object userState) {
            if ((this.EmrAccountValidateOperationCompleted == null)) {
                this.EmrAccountValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrAccountValidateOperationCompleted);
            }
            this.InvokeAsync("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation}, this.EmrAccountValidateOperationCompleted, userState);
        }
        
        private void OnEmrAccountValidateOperationCompleted(object arg) {
            if ((this.EmrAccountValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrAccountValidateCompleted(this, new EmrAccountValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroLabReportItemDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroLabReportItemDict() {
            this.Invoke("EmrSynchroLabReportItemDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroLabReportItemDictAsync() {
            this.EmrSynchroLabReportItemDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroLabReportItemDictAsync(object userState) {
            if ((this.EmrSynchroLabReportItemDictOperationCompleted == null)) {
                this.EmrSynchroLabReportItemDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroLabReportItemDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroLabReportItemDict", new object[0], this.EmrSynchroLabReportItemDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroLabReportItemDictOperationCompleted(object arg) {
            if ((this.EmrSynchroLabReportItemDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroLabReportItemDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOnePat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOnePat(string strInpNo, string strMrDept, string strRDoctor) {
            this.Invoke("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor});
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor) {
            this.EmrSynchroOnePatAsync(strInpNo, strMrDept, strRDoctor, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor, object userState) {
            if ((this.EmrSynchroOnePatOperationCompleted == null)) {
                this.EmrSynchroOnePatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOnePatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor}, this.EmrSynchroOnePatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOnePatOperationCompleted(object arg) {
            if ((this.EmrSynchroOnePatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOnePatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPatMZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPatMZ(string nDeptID, string strCurrentDate) {
            this.Invoke("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate) {
            this.EmrSynchroNewPatMZAsync(nDeptID, strCurrentDate, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate, object userState) {
            if ((this.EmrSynchroNewPatMZOperationCompleted == null)) {
                this.EmrSynchroNewPatMZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatMZOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate}, this.EmrSynchroNewPatMZOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatMZOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatMZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatMZCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderItemDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderItemDict(string strOrderTypeCode) {
            object[] results = this.Invoke("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode) {
            this.EmrGetOrderItemDictAsync(strOrderTypeCode, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode, object userState) {
            if ((this.EmrGetOrderItemDictOperationCompleted == null)) {
                this.EmrGetOrderItemDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderItemDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode}, this.EmrGetOrderItemDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderItemDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderItemDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderItemDictCompleted(this, new EmrGetOrderItemDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrOperAnaMsgHandler", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrOperAnaMsgHandler(string MsgText) {
            object[] results = this.Invoke("EmrOperAnaMsgHandler", new object[] {
                        MsgText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrOperAnaMsgHandlerAsync(string MsgText) {
            this.EmrOperAnaMsgHandlerAsync(MsgText, null);
        }
        
        /// <remarks/>
        public void EmrOperAnaMsgHandlerAsync(string MsgText, object userState) {
            if ((this.EmrOperAnaMsgHandlerOperationCompleted == null)) {
                this.EmrOperAnaMsgHandlerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrOperAnaMsgHandlerOperationCompleted);
            }
            this.InvokeAsync("EmrOperAnaMsgHandler", new object[] {
                        MsgText}, this.EmrOperAnaMsgHandlerOperationCompleted, userState);
        }
        
        private void OnEmrOperAnaMsgHandlerOperationCompleted(object arg) {
            if ((this.EmrOperAnaMsgHandlerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrOperAnaMsgHandlerCompleted(this, new EmrOperAnaMsgHandlerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDeptPatOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDeptPatOrder(string nDeptID) {
            this.Invoke("EmrSynchroDeptPatOrder", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroDeptPatOrderAsync(string nDeptID) {
            this.EmrSynchroDeptPatOrderAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptPatOrderAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroDeptPatOrderOperationCompleted == null)) {
                this.EmrSynchroDeptPatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDeptPatOrderOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDeptPatOrder", new object[] {
                        nDeptID}, this.EmrSynchroDeptPatOrderOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDeptPatOrderOperationCompleted(object arg) {
            if ((this.EmrSynchroDeptPatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDeptPatOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatMedicalCostById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatMedicalCostById(string strPatientId, int nVisitId) {
            this.Invoke("EmrSynchroPatMedicalCostById", new object[] {
                        strPatientId,
                        nVisitId});
        }
        
        /// <remarks/>
        public void EmrSynchroPatMedicalCostByIdAsync(string strPatientId, int nVisitId) {
            this.EmrSynchroPatMedicalCostByIdAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatMedicalCostByIdAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrSynchroPatMedicalCostByIdOperationCompleted == null)) {
                this.EmrSynchroPatMedicalCostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatMedicalCostByIdOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatMedicalCostById", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrSynchroPatMedicalCostByIdOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatMedicalCostByIdOperationCompleted(object arg) {
            if ((this.EmrSynchroPatMedicalCostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatMedicalCostByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroLis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroLis() {
            this.Invoke("EmrSynchroLis", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroLisAsync() {
            this.EmrSynchroLisAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroLisAsync(object userState) {
            if ((this.EmrSynchroLisOperationCompleted == null)) {
                this.EmrSynchroLisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroLisOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroLis", new object[0], this.EmrSynchroLisOperationCompleted, userState);
        }
        
        private void OnEmrSynchroLisOperationCompleted(object arg) {
            if ((this.EmrSynchroLisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroLisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroAdtLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroAdtLog() {
            this.Invoke("EmrSynchroAdtLog", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroAdtLogAsync() {
            this.EmrSynchroAdtLogAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroAdtLogAsync(object userState) {
            if ((this.EmrSynchroAdtLogOperationCompleted == null)) {
                this.EmrSynchroAdtLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroAdtLogOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroAdtLog", new object[0], this.EmrSynchroAdtLogOperationCompleted, userState);
        }
        
        private void OnEmrSynchroAdtLogOperationCompleted(object arg) {
            if ((this.EmrSynchroAdtLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroAdtLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrReportBedDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmrReportBedDate(string strDate) {
            this.Invoke("UpdateEmrReportBedDate", new object[] {
                        strDate});
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateAsync(string strDate) {
            this.UpdateEmrReportBedDateAsync(strDate, null);
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateAsync(string strDate, object userState) {
            if ((this.UpdateEmrReportBedDateOperationCompleted == null)) {
                this.UpdateEmrReportBedDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrReportBedDateOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrReportBedDate", new object[] {
                        strDate}, this.UpdateEmrReportBedDateOperationCompleted, userState);
        }
        
        private void OnUpdateEmrReportBedDateOperationCompleted(object arg) {
            if ((this.UpdateEmrReportBedDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrReportBedDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisQMSYRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EmrGetHisQMSYRS(string nDeptId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("EmrGetHisQMSYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisQMSYRSAsync(string nDeptId, string strStartDate, string strEndDate) {
            this.EmrGetHisQMSYRSAsync(nDeptId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void EmrGetHisQMSYRSAsync(string nDeptId, string strStartDate, string strEndDate, object userState) {
            if ((this.EmrGetHisQMSYRSOperationCompleted == null)) {
                this.EmrGetHisQMSYRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisQMSYRSOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisQMSYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate}, this.EmrGetHisQMSYRSOperationCompleted, userState);
        }
        
        private void OnEmrGetHisQMSYRSOperationCompleted(object arg) {
            if ((this.EmrGetHisQMSYRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisQMSYRSCompleted(this, new EmrGetHisQMSYRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetPatDischargeDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetPatDischargeDateTime(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("EmrGetPatDischargeDateTime", new object[] {
                        strPatientId,
                        nVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetPatDischargeDateTimeAsync(string strPatientId, int nVisitId) {
            this.EmrGetPatDischargeDateTimeAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrGetPatDischargeDateTimeAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrGetPatDischargeDateTimeOperationCompleted == null)) {
                this.EmrGetPatDischargeDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetPatDischargeDateTimeOperationCompleted);
            }
            this.InvokeAsync("EmrGetPatDischargeDateTime", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrGetPatDischargeDateTimeOperationCompleted, userState);
        }
        
        private void OnEmrGetPatDischargeDateTimeOperationCompleted(object arg) {
            if ((this.EmrGetPatDischargeDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetPatDischargeDateTimeCompleted(this, new EmrGetPatDischargeDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetEncodingPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetEncodingPassword(string strUserID, string strUSERPWD) {
            object[] results = this.Invoke("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD) {
            this.EmrGetEncodingPasswordAsync(strUserID, strUSERPWD, null);
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD, object userState) {
            if ((this.EmrGetEncodingPasswordOperationCompleted == null)) {
                this.EmrGetEncodingPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetEncodingPasswordOperationCompleted);
            }
            this.InvokeAsync("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD}, this.EmrGetEncodingPasswordOperationCompleted, userState);
        }
        
        private void OnEmrGetEncodingPasswordOperationCompleted(object arg) {
            if ((this.EmrGetEncodingPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetEncodingPasswordCompleted(this, new EmrGetEncodingPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/YunNanTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet YunNanTest(string _strSql, string _strConnNmae) {
            object[] results = this.Invoke("YunNanTest", new object[] {
                        _strSql,
                        _strConnNmae});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void YunNanTestAsync(string _strSql, string _strConnNmae) {
            this.YunNanTestAsync(_strSql, _strConnNmae, null);
        }
        
        /// <remarks/>
        public void YunNanTestAsync(string _strSql, string _strConnNmae, object userState) {
            if ((this.YunNanTestOperationCompleted == null)) {
                this.YunNanTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnYunNanTestOperationCompleted);
            }
            this.InvokeAsync("YunNanTest", new object[] {
                        _strSql,
                        _strConnNmae}, this.YunNanTestOperationCompleted, userState);
        }
        
        private void OnYunNanTestOperationCompleted(object arg) {
            if ((this.YunNanTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.YunNanTestCompleted(this, new YunNanTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneralDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GeneralDataSet(string _strSql, string _strConnNmae) {
            object[] results = this.Invoke("GeneralDataSet", new object[] {
                        _strSql,
                        _strConnNmae});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GeneralDataSetAsync(string _strSql, string _strConnNmae) {
            this.GeneralDataSetAsync(_strSql, _strConnNmae, null);
        }
        
        /// <remarks/>
        public void GeneralDataSetAsync(string _strSql, string _strConnNmae, object userState) {
            if ((this.GeneralDataSetOperationCompleted == null)) {
                this.GeneralDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneralDataSetOperationCompleted);
            }
            this.InvokeAsync("GeneralDataSet", new object[] {
                        _strSql,
                        _strConnNmae}, this.GeneralDataSetOperationCompleted, userState);
        }
        
        private void OnGeneralDataSetOperationCompleted(object arg) {
            if ((this.GeneralDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneralDataSetCompleted(this, new GeneralDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestPacs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestPacs(string sql) {
            object[] results = this.Invoke("TestPacs", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestPacsAsync(string sql) {
            this.TestPacsAsync(sql, null);
        }
        
        /// <remarks/>
        public void TestPacsAsync(string sql, object userState) {
            if ((this.TestPacsOperationCompleted == null)) {
                this.TestPacsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestPacsOperationCompleted);
            }
            this.InvokeAsync("TestPacs", new object[] {
                        sql}, this.TestPacsOperationCompleted, userState);
        }
        
        private void OnTestPacsOperationCompleted(object arg) {
            if ((this.TestPacsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestPacsCompleted(this, new TestPacsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGenralDataSet(object[] list) {
            object[] results = this.Invoke("EmrGenralDataSet", new object[] {
                        list});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list) {
            this.EmrGenralDataSetAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list, object userState) {
            if ((this.EmrGenralDataSetOperationCompleted == null)) {
                this.EmrGenralDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGenralDataSet", new object[] {
                        list}, this.EmrGenralDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGenralDataSetOperationCompleted(object arg) {
            if ((this.EmrGenralDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralDataSetCompleted(this, new EmrGenralDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrToHis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrToHis(string strPatientID, string strVisitID, string strFlag) {
            this.Invoke("EmrToHis", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag});
        }
        
        /// <remarks/>
        public void EmrToHisAsync(string strPatientID, string strVisitID, string strFlag) {
            this.EmrToHisAsync(strPatientID, strVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void EmrToHisAsync(string strPatientID, string strVisitID, string strFlag, object userState) {
            if ((this.EmrToHisOperationCompleted == null)) {
                this.EmrToHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrToHisOperationCompleted);
            }
            this.InvokeAsync("EmrToHis", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag}, this.EmrToHisOperationCompleted, userState);
        }
        
        private void OnEmrToHisOperationCompleted(object arg) {
            if ((this.EmrToHisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrToHisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGenralStr(object[] list) {
            object[] results = this.Invoke("EmrGenralStr", new object[] {
                        list});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list) {
            this.EmrGenralStrAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list, object userState) {
            if ((this.EmrGenralStrOperationCompleted == null)) {
                this.EmrGenralStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralStrOperationCompleted);
            }
            this.InvokeAsync("EmrGenralStr", new object[] {
                        list}, this.EmrGenralStrOperationCompleted, userState);
        }
        
        private void OnEmrGenralStrOperationCompleted(object arg) {
            if ((this.EmrGenralStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralStrCompleted(this, new EmrGenralStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SynchroZDCHARGEITEM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SynchroZDCHARGEITEM() {
            this.Invoke("SynchroZDCHARGEITEM", new object[0]);
        }
        
        /// <remarks/>
        public void SynchroZDCHARGEITEMAsync() {
            this.SynchroZDCHARGEITEMAsync(null);
        }
        
        /// <remarks/>
        public void SynchroZDCHARGEITEMAsync(object userState) {
            if ((this.SynchroZDCHARGEITEMOperationCompleted == null)) {
                this.SynchroZDCHARGEITEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchroZDCHARGEITEMOperationCompleted);
            }
            this.InvokeAsync("SynchroZDCHARGEITEM", new object[0], this.SynchroZDCHARGEITEMOperationCompleted, userState);
        }
        
        private void OnSynchroZDCHARGEITEMOperationCompleted(object arg) {
            if ((this.SynchroZDCHARGEITEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchroZDCHARGEITEMCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/testnewpatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string testnewpatient(string nDeptID) {
            object[] results = this.Invoke("testnewpatient", new object[] {
                        nDeptID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testnewpatientAsync(string nDeptID) {
            this.testnewpatientAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void testnewpatientAsync(string nDeptID, object userState) {
            if ((this.testnewpatientOperationCompleted == null)) {
                this.testnewpatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestnewpatientOperationCompleted);
            }
            this.InvokeAsync("testnewpatient", new object[] {
                        nDeptID}, this.testnewpatientOperationCompleted, userState);
        }
        
        private void OntestnewpatientOperationCompleted(object arg) {
            if ((this.testnewpatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testnewpatientCompleted(this, new testnewpatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrUserPicValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrUserPicValidate(string strUserID, string strUserPicPwd) {
            object[] results = this.Invoke("EmrUserPicValidate", new object[] {
                        strUserID,
                        strUserPicPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrUserPicValidateAsync(string strUserID, string strUserPicPwd) {
            this.EmrUserPicValidateAsync(strUserID, strUserPicPwd, null);
        }
        
        /// <remarks/>
        public void EmrUserPicValidateAsync(string strUserID, string strUserPicPwd, object userState) {
            if ((this.EmrUserPicValidateOperationCompleted == null)) {
                this.EmrUserPicValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrUserPicValidateOperationCompleted);
            }
            this.InvokeAsync("EmrUserPicValidate", new object[] {
                        strUserID,
                        strUserPicPwd}, this.EmrUserPicValidateOperationCompleted, userState);
        }
        
        private void OnEmrUserPicValidateOperationCompleted(object arg) {
            if ((this.EmrUserPicValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrUserPicValidateCompleted(this, new EmrUserPicValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HISUserNamePic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HISUserNamePic(string strUserID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bt, string strUseSign) {
            object[] results = this.Invoke("HISUserNamePic", new object[] {
                        strUserID,
                        bt,
                        strUseSign});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HISUserNamePicAsync(string strUserID, byte[] bt, string strUseSign) {
            this.HISUserNamePicAsync(strUserID, bt, strUseSign, null);
        }
        
        /// <remarks/>
        public void HISUserNamePicAsync(string strUserID, byte[] bt, string strUseSign, object userState) {
            if ((this.HISUserNamePicOperationCompleted == null)) {
                this.HISUserNamePicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHISUserNamePicOperationCompleted);
            }
            this.InvokeAsync("HISUserNamePic", new object[] {
                        strUserID,
                        bt,
                        strUseSign}, this.HISUserNamePicOperationCompleted, userState);
        }
        
        private void OnHISUserNamePicOperationCompleted(object arg) {
            if ((this.HISUserNamePicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HISUserNamePicCompleted(this, new HISUserNamePicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDict() {
            this.Invoke("EmrSynchroDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync() {
            this.EmrSynchroDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync(object userState) {
            if ((this.EmrSynchroDictOperationCompleted == null)) {
                this.EmrSynchroDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDict", new object[0], this.EmrSynchroDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDeptDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDeptDict() {
            this.Invoke("EmrSynchroDeptDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync() {
            this.EmrSynchroDeptDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync(object userState) {
            if ((this.EmrSynchroDeptDictOperationCompleted == null)) {
                this.EmrSynchroDeptDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDeptDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDeptDict", new object[0], this.EmrSynchroDeptDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDeptDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDeptDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDeptDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroICDCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroICDCode() {
            this.Invoke("EmrSynchroICDCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync() {
            this.EmrSynchroICDCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync(object userState) {
            if ((this.EmrSynchroICDCodeOperationCompleted == null)) {
                this.EmrSynchroICDCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroICDCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroICDCode", new object[0], this.EmrSynchroICDCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroICDCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroICDCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroICDCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroBedDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroBedDict(string strDeptCode) {
            this.Invoke("EmrSynchroBedDict", new object[] {
                        strDeptCode});
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode) {
            this.EmrSynchroBedDictAsync(strDeptCode, null);
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode, object userState) {
            if ((this.EmrSynchroBedDictOperationCompleted == null)) {
                this.EmrSynchroBedDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroBedDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroBedDict", new object[] {
                        strDeptCode}, this.EmrSynchroBedDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroBedDictOperationCompleted(object arg) {
            if ((this.EmrSynchroBedDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroBedDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOperationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOperationCode() {
            this.Invoke("EmrSynchroOperationCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync() {
            this.EmrSynchroOperationCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync(object userState) {
            if ((this.EmrSynchroOperationCodeOperationCompleted == null)) {
                this.EmrSynchroOperationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOperationCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOperationCode", new object[0], this.EmrSynchroOperationCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOperationCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroOperationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOperationCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroUsers() {
            this.Invoke("EmrSynchroUsers", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync() {
            this.EmrSynchroUsersAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync(object userState) {
            if ((this.EmrSynchroUsersOperationCompleted == null)) {
                this.EmrSynchroUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroUsersOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroUsers", new object[0], this.EmrSynchroUsersOperationCompleted, userState);
        }
        
        private void OnEmrSynchroUsersOperationCompleted(object arg) {
            if ((this.EmrSynchroUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSet() {
            object[] results = this.Invoke("EmrGetOrderDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync() {
            this.EmrGetOrderDataSetAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync(object userState) {
            if ((this.EmrGetOrderDataSetOperationCompleted == null)) {
                this.EmrGetOrderDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSet", new object[0], this.EmrGetOrderDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetCompleted(this, new EmrGetOrderDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPat(string nDeptID) {
            this.Invoke("EmrSynchroNewPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID) {
            this.EmrSynchroNewPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroNewPatOperationCompleted == null)) {
                this.EmrSynchroNewPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPat", new object[] {
                        nDeptID}, this.EmrSynchroNewPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOutPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOutPat(string nDeptID) {
            this.Invoke("EmrSynchroOutPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID) {
            this.EmrSynchroOutPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroOutPatOperationCompleted == null)) {
                this.EmrSynchroOutPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOutPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOutPat", new object[] {
                        nDeptID}, this.EmrSynchroOutPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOutPatOperationCompleted(object arg) {
            if ((this.EmrSynchroOutPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOutPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatBasicInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatBasicInfo(string patientID, string visitID) {
            this.Invoke("EmrSynchroPatBasicInfo", new object[] {
                        patientID,
                        visitID});
        }
        
        /// <remarks/>
        public void EmrSynchroPatBasicInfoAsync(string patientID, string visitID) {
            this.EmrSynchroPatBasicInfoAsync(patientID, visitID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatBasicInfoAsync(string patientID, string visitID, object userState) {
            if ((this.EmrSynchroPatBasicInfoOperationCompleted == null)) {
                this.EmrSynchroPatBasicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatBasicInfoOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatBasicInfo", new object[] {
                        patientID,
                        visitID}, this.EmrSynchroPatBasicInfoOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatBasicInfoOperationCompleted(object arg) {
            if ((this.EmrSynchroPatBasicInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatBasicInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatTotalPayMents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatTotalPayMents() {
            this.Invoke("EmrSynchroPatTotalPayMents", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroPatTotalPayMentsAsync() {
            this.EmrSynchroPatTotalPayMentsAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatTotalPayMentsAsync(object userState) {
            if ((this.EmrSynchroPatTotalPayMentsOperationCompleted == null)) {
                this.EmrSynchroPatTotalPayMentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatTotalPayMentsOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatTotalPayMents", new object[0], this.EmrSynchroPatTotalPayMentsOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatTotalPayMentsOperationCompleted(object arg) {
            if ((this.EmrSynchroPatTotalPayMentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatTotalPayMentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderTypeDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderTypeDict() {
            object[] results = this.Invoke("EmrGetOrderTypeDict", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync() {
            this.EmrGetOrderTypeDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync(object userState) {
            if ((this.EmrGetOrderTypeDictOperationCompleted == null)) {
                this.EmrGetOrderTypeDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderTypeDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderTypeDict", new object[0], this.EmrGetOrderTypeDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderTypeDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderTypeDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderTypeDictCompleted(this, new EmrGetOrderTypeDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetOrderDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetOrderDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetOrderDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetOrderDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetByPatentIDCompleted(this, new EmrGetOrderDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatOrder(string strPatientId, int nVisitId) {
            this.Invoke("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId});
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId) {
            this.EmrSynchroPatOrderAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrSynchroPatOrderOperationCompleted == null)) {
                this.EmrSynchroPatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatOrderOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrSynchroPatOrderOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatOrderOperationCompleted(object arg) {
            if ((this.EmrSynchroPatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetGeneralSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetGeneralSQL(string strPatientID, string strVisitID) {
            object[] results = this.Invoke("EmrGetGeneralSQL", new object[] {
                        strPatientID,
                        strVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strPatientID, string strVisitID) {
            this.EmrGetGeneralSQLAsync(strPatientID, strVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strPatientID, string strVisitID, object userState) {
            if ((this.EmrGetGeneralSQLOperationCompleted == null)) {
                this.EmrGetGeneralSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetGeneralSQLOperationCompleted);
            }
            this.InvokeAsync("EmrGetGeneralSQL", new object[] {
                        strPatientID,
                        strVisitID}, this.EmrGetGeneralSQLOperationCompleted, userState);
        }
        
        private void OnEmrGetGeneralSQLOperationCompleted(object arg) {
            if ((this.EmrGetGeneralSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetGeneralSQLCompleted(this, new EmrGetGeneralSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetPsblMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetPsblMaster(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetPsblMaster", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetPsblMasterAsync(string strPatientID, int intVisitID) {
            this.EmrGetPsblMasterAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetPsblMasterAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetPsblMasterOperationCompleted == null)) {
                this.EmrGetPsblMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetPsblMasterOperationCompleted);
            }
            this.InvokeAsync("EmrGetPsblMaster", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetPsblMasterOperationCompleted, userState);
        }
        
        private void OnEmrGetPsblMasterOperationCompleted(object arg) {
            if ((this.EmrGetPsblMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetPsblMasterCompleted(this, new EmrGetPsblMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetPsblReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetPsblReport(string strExamNO) {
            object[] results = this.Invoke("EmrGetPsblReport", new object[] {
                        strExamNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetPsblReportAsync(string strExamNO) {
            this.EmrGetPsblReportAsync(strExamNO, null);
        }
        
        /// <remarks/>
        public void EmrGetPsblReportAsync(string strExamNO, object userState) {
            if ((this.EmrGetPsblReportOperationCompleted == null)) {
                this.EmrGetPsblReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetPsblReportOperationCompleted);
            }
            this.InvokeAsync("EmrGetPsblReport", new object[] {
                        strExamNO}, this.EmrGetPsblReportOperationCompleted, userState);
        }
        
        private void OnEmrGetPsblReportOperationCompleted(object arg) {
            if ((this.EmrGetPsblReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetPsblReportCompleted(this, new EmrGetPsblReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void TestExceptionLogerCompletedEventHandler(object sender, TestExceptionLogerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestExceptionLogerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestExceptionLogerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetMRInfoByEleMentNameCompletedEventHandler(object sender, GetMRInfoByEleMentNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMRInfoByEleMentNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMRInfoByEleMentNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void CallInterfaceCompletedEventHandler(object sender, CallInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetLabDataSetByPatentIDCompletedEventHandler(object sender, EmrGetLabDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetPacsDataCompletedEventHandler(object sender, GetPacsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPacsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPacsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GetHISMESSCompletedEventHandler(object sender, GetHISMESSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHISMESSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHISMESSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void TestHISCONFIRMICDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void C_TestCompletedEventHandler(object sender, C_TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class C_TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal C_TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrAccountValidateCompletedEventHandler(object sender, EmrAccountValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrAccountValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrAccountValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroLabReportItemDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroOnePatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroNewPatMZCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetOrderItemDictCompletedEventHandler(object sender, EmrGetOrderItemDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderItemDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderItemDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrOperAnaMsgHandlerCompletedEventHandler(object sender, EmrOperAnaMsgHandlerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrOperAnaMsgHandlerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrOperAnaMsgHandlerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroDeptPatOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroPatMedicalCostByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroLisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroAdtLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void UpdateEmrReportBedDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetHisQMSYRSCompletedEventHandler(object sender, EmrGetHisQMSYRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisQMSYRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisQMSYRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetPatDischargeDateTimeCompletedEventHandler(object sender, EmrGetPatDischargeDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetPatDischargeDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetPatDischargeDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetEncodingPasswordCompletedEventHandler(object sender, EmrGetEncodingPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetEncodingPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetEncodingPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void YunNanTestCompletedEventHandler(object sender, YunNanTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class YunNanTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal YunNanTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void GeneralDataSetCompletedEventHandler(object sender, GeneralDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneralDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneralDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void TestPacsCompletedEventHandler(object sender, TestPacsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestPacsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestPacsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGenralDataSetCompletedEventHandler(object sender, EmrGenralDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrToHisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGenralStrCompletedEventHandler(object sender, EmrGenralStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void SynchroZDCHARGEITEMCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void testnewpatientCompletedEventHandler(object sender, testnewpatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testnewpatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testnewpatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrUserPicValidateCompletedEventHandler(object sender, EmrUserPicValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrUserPicValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrUserPicValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void HISUserNamePicCompletedEventHandler(object sender, HISUserNamePicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HISUserNamePicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HISUserNamePicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroDeptDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroICDCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroBedDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroOperationCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetOrderDataSetCompletedEventHandler(object sender, EmrGetOrderDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroNewPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroOutPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroPatBasicInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroPatTotalPayMentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetOrderTypeDictCompletedEventHandler(object sender, EmrGetOrderTypeDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderTypeDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderTypeDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetOrderDataSetByPatentIDCompletedEventHandler(object sender, EmrGetOrderDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrSynchroPatOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetGeneralSQLCompletedEventHandler(object sender, EmrGetGeneralSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetGeneralSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetGeneralSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetPsblMasterCompletedEventHandler(object sender, EmrGetPsblMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetPsblMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetPsblMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void EmrGetPsblReportCompletedEventHandler(object sender, EmrGetPsblReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetPsblReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetPsblReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591